name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            git fetch origin "${{ github.event.pull_request.base.ref }}" --depth=1
            files=$(git diff --name-only "origin/${{ github.event.pull_request.base.ref }}")
            python=false
            broker_ui=false
            if echo "$files" | grep -E '^(gov|gis|yad2|rami|backend-django|tests)/'; then
              python=true
            fi
            if echo "$files" | grep -E '^realestate-broker-ui/'; then
              broker_ui=true
            fi
            echo "python=$python" >> "$GITHUB_OUTPUT"
            echo "broker_ui=$broker_ui" >> "$GITHUB_OUTPUT"
          else
            echo "python=true" >> "$GITHUB_OUTPUT"
            echo "broker_ui=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Python
        if: steps.changes.outputs.python == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Core Backend Dependencies
        if: steps.changes.outputs.python == 'true'
        run: |
          python -m pip install --upgrade pip
          cd backend-django
          pip install -r requirements.txt
          cd ..

      - name: Install Module Dependencies
        if: steps.changes.outputs.python == 'true'
        run: |
          # Install SQLAlchemy and other core database dependencies
          pip install sqlalchemy
          
          # Install database module
          if [ -f "db/requirements.txt" ]; then
            echo "Installing database module..."
            pip install -r db/requirements.txt
          fi
          
          # Install government data modules
          if [ -f "gov/requirements.txt" ]; then
            echo "Installing government data modules..."
            pip install -r gov/requirements.txt
          fi
          
          # Install GIS module
          if [ -f "gis/requirements.txt" ]; then
            echo "Installing GIS module..."
            pip install -r gis/requirements.txt
          fi
          
          # Install Yad2 module
          if [ -f "yad2/requirements.txt" ]; then
            echo "Installing Yad2 module..."
            pip install -r yad2/requirements.txt
          fi
          
          # Install RAMI module
          if [ -f "rami/requirements.txt" ]; then
            echo "Installing RAMI module..."
            pip install -r rami/requirements.txt
          fi
          
          # Install global dependencies
          if [ -f "requirements.txt" ]; then
            echo "Installing global dependencies..."
            pip install -r requirements.txt
          fi
          
          # Install additional test dependencies that might be missing
          pip install responses pytest-mock pytest-asyncio

      - name: Run Python Tests
        if: steps.changes.outputs.python == 'true'
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # Run tests for each module if it exists
          if [ -d "tests" ]; then
            echo "Running main test suite..."
            pytest tests/ -q --tb=short
          fi
          
          if [ -d "gov" ]; then
            echo "Running government module tests..."
            pytest gov/ -q --tb=short || echo "No tests found in gov module"
          fi
          
          if [ -d "gis" ]; then
            echo "Running GIS module tests..."
            pytest gis/ -q --tb=short || echo "No tests found in GIS module"
          fi
          
          if [ -d "yad2" ]; then
            echo "Running Yad2 module tests..."
            pytest yad2/ -q --tb=short || echo "No tests found in Yad2 module"
          fi
          
          if [ -d "rami" ]; then
            echo "Running RAMI module tests..."
            pytest rami/ -q --tb=short || echo "No tests found in RAMI module"
          fi

      - name: Set up Node
        if: steps.changes.outputs.broker_ui == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install UI dependencies
        if: steps.changes.outputs.broker_ui == 'true'
        working-directory: realestate-broker-ui
        run: |
          npm ci

      - name: Lint UI
        if: steps.changes.outputs.broker_ui == 'true'
        working-directory: realestate-broker-ui
        run: |
          npm run lint --if-present

      - name: Run UI tests
        if: steps.changes.outputs.broker_ui == 'true'
        working-directory: realestate-broker-ui
        run: |
          npm test --if-present

      - name: Build UI
        if: steps.changes.outputs.broker_ui == 'true'
        working-directory: realestate-broker-ui
        run: |
          npm run build
